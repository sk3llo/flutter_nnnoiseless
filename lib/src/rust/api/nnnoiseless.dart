// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.11.1.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

// These functions are ignored because they are not marked as `pub`: `denoise_wav`, `hann_window`
// These types are ignored because they are neither used by any `pub` functions nor (for structs and enums) marked `#[frb(unignore)]`: `DenoiseRealtimeState`

/// Denoises a chunk of raw audio bytes in real-time.
///
/// This function is stateful and designed to be called repeatedly with
/// consecutive chunks of audio data (e.g., from a microphone stream).
///
/// # Arguments
/// * `input` - A vector of bytes representing raw 16-bit PCM mono audio.
///
/// # Returns
/// A `Result` containing the denoised audio chunk as a `Vec<u8>`.
Future<Uint8List> denoiseRealtime(
        {required List<int> input, required int inputSampleRate}) =>
    RustLib.instance.api.crateApiNnnoiselessDenoiseRealtime(
        input: input, inputSampleRate: inputSampleRate);

Future<void> denoise(
        {required String inputPathStr, required String outputPathStr}) =>
    RustLib.instance.api.crateApiNnnoiselessDenoise(
        inputPathStr: inputPathStr, outputPathStr: outputPathStr);
